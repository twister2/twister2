################################################################################
# Client configuration parameters for submission of twister2 jobs
################################################################################

# twister2 job name
twister2.job.name: "basic-kube"

# number of cores for each worker
# it is a floating point number
# each worker can have fractional cores such as 0.5 cores or multiple cores as 2
# default value is 1.0 core
twister2.worker.cpu: 0.2

# amount of memory for each worker in the job in mega bytes as integer
# default value is 200 MB
twister2.worker.ram: 1024

# amount of volatile hard disk space on each worker in giga bytes as a double
# set this value to zero if you will not use volatile hard disk space
# when its value is zero, no volatile disk will be setup of this worker
# default value is 0 GB. 
twister2.worker.volatile.disk: 1.0

# number of worker instances in this job
twister2.worker.instances: 6

########################################################################
# Kubernetes related settings
########################################################################
# namespace to use in kubernetes
# default value is "default"
# kubernetes.namespace: "default"

# number of workers (containers) per pod
# default is 1
# twister2.worker.instances must be divisible by containers_per_pod
kubernetes.workers.per.pod: 2

########################################################################
# persistent volume related settings
########################################################################
# persistent volume size per worker in GB as double
# default value is 0.0Gi
# set this value to zero, if you have not persistent disk support
# when this value is zero, twister2 will not try to set up persistent storage for this job
persistent.volume.per.worker: 1.0

# the admin should provide a PersistentVolume object with the following storage class.
# Default storage class name is "twister2".
kubernetes.persistent.storage.class: "twister2-nfs-storage"

# persistent storage access mode. 
# It shows the access mode for workers to access the shared persistent storage.
# if it is "ReadWriteMany", many workers can read and write
# other alternatives: "ReadWriteOnce", "ReadOnlyMany"
# https://kubernetes.io/docs/concepts/storage/persistent-volumes
kubernetes.storage.access.mode: "ReadWriteMany"
